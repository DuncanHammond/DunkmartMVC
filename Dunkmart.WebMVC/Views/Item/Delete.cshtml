@model Dunkmart.Models.Item

@{
    string title = "Delete" + Model.ItemID;
    ViewData["Title"] = title;
}

<h1>@title</h1>
<h4>Would you like to delete Item #@Model.ItemID?</h4>
</hr>
<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.ItemID)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.ItemID)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.ItemName)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.ItemName)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.ItemPrice)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.ItemPrice)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.ItemStock)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.ItemStock)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.SellByDate)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.SellByDate)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.AisleLocation)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.AisleLocation)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Type)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Type)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Damaged)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Damaged)
    </dd>

    </dd>
</dl>
<form asp-action="Delete">
    <input type="submit" value="Delete" class="btn btn-danger" /> |
    <a asp-action="Index">Back to List</a>
</form>